name: CI

on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main

jobs:
  changes:
    name: "Identify changed packages"
    runs-on: ubuntu-latest
    outputs:
      adapters: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            prisma: packages/prisma/**
            fauna: packages/fauna/**
            dynamodb: packages/dynamodb/**
            typeorm-legacy: packages/typeorm-legacy/**
            prisma-legacy: packages/prisma-legacy/**
            firebase: packages/firebase/**
            pouchdb: packages/pouchdb/**
  test-adapters:
    name: "Test"
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.adapters != '[]'
    strategy:
      matrix:
        adapter: ${{ fromJSON(needs.changes.outputs.adapters) }}
    defaults:
      run:
        working-directory: ./packages/${{ matrix.adapter }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - uses: bahmutov/npm-install@v1
      - name: test ${{ matrix.adapter }}
        run: yarn test
  publish:
    name: "Publish"
    needs: test-adapters
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - uses: bahmutov/npm-install@v1
      - name: Build (changed packages)
        run: lerna run build --since HEAD~
      - name: Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - name: Publish to @next
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/next' }}
        run: lerna publish --canary --preid next --dist-tag next --yes --no-verify-access
      - name: Publish to @pr
        if: ${{ github.base_ref == 'main' }}
        run: lerna publish --canary --preid pr.${{github.event.number}} --dist-tag pr-${{github.event.number}} --yes --no-verify-access
      - name: Publish to @latest
        if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        run: "lerna publish --dist-tag latest --yes --no-verify-access -m 'chore(release): publish [skip ci]'"
